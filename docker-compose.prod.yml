version: "3.4"
services:
  fursuit_db_python:
    restart: always
    build:
      context: ./
      dockerfile: "dockerfile/python-dockerfile-prod"
    environment:
      - "PYTHONUNBUFFERED=1"
      - NVIDIA_VISIBLE_DEVICES=0
    volumes:
      - .:/app
      - ./var/.keras:/root/.keras
    networks:
      - fursuit_db
  fursuit_db_telegram_bot_python:
    restart: always
    build:
      context: ./
      dockerfile: "dockerfile/python-telegram-bot-dockerfile-prod"
    environment:
      - "PYTHONUNBUFFERED=1"
    volumes:
      - ./telegram_bot:/app
    networks:
      - fursuit_db
  fursuit_db_nginx:
    restart: always
    build: ./nginx
    ports:
      - "${DOCKER_WEB_PORT}:80"
      - "${DOCKER_WEB_SSL_PORT}:443"
    volumes:
      - .:/app
      - ./nginx/letsencrypt:/etc/letsencrypt
    depends_on:
      - fursuit_db_python
      - fursuit_db_node
    networks:
      - fursuit_db
    command: "/bin/sh -c 'while :; do sleep 24h & wait $${!}; certbot renew; nginx -s reload; done & nginx -g \"daemon off;\"'"
  fursuit_db_milvus:
    image: milvusdb/milvus:1.1.1-cpu-d061621-330cc6
    volumes:
      - ./var/milvus/db:/var/lib/milvus/db
      - ./milvus_config:/var/lib/milvus/conf
      - ./var/milvus/logs:/var/lib/milvus/logs
      - ./var/milvus/wal:/var/lib/milvus/wal
    networks:
      - fursuit_db
    depends_on:
      - fursuit_db_python
  fursuit_db_elastic:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:${DOCKER_ELASTICSEARCH_VERSION}
    volumes:
      - ./var/elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - fursuit_db
    depends_on:
      - fursuit_db_python
  fursuit_db_node:
    build:
      context: ./
      dockerfile: dockerfile/node-dockerfile
    working_dir: /app
    ports:
      - "${NODEJS_PORT}"
    volumes:
      - .:/app
    networks:
      - fursuit_db
  fursuit_db_mysql:
    image: mysql:8.0.17
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - fursuit_db
  fursuit_db_redis:
    restart: always
    image: redis:latest
    networks:
      - fursuit_db
    volumes:
      - ./var/redis:/data
  fursuit_db_tensorflow_serving:
    restart: always
    image: tensorflow/serving
    networks:
      - fursuit_db
    volumes:
      - ./fursuit_db_model:/models/fursuit_db_model/1
    environment:
      - "MODEL_NAME=fursuit_db_model"
networks:
  fursuit_db:
    driver: "bridge"
